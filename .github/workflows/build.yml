name: Build

on:
    pull_request:
        branches: [ v0 ]

jobs:
    build:
        runs-on: ubuntu-latest
        container: node:16

        steps:
            - name: Checkout branch
              uses: actions/checkout@v2
            - name: Cache Node Modules and NPM Cache
              id: cache
              uses: actions/cache@v2
              with:
                  path: |
                      node_modules
                      ~/.npm
                  key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-node
            - name: Install deps
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm install
            - name: Run Tests
              run: npm test
            - name: Build docsite
              run: npm run build
              # Docs:
              # 1. https://docs.mattermost.com/developer/webhooks-incoming.html
              # 2. https://docs.mattermost.com/developer/message-attachments.html
            - name: Send Mattermost notification
              if: ${{ ! cancelled() }}
              run: |
                  if [ ${{ job.status }} = 'success' ]; then
                    STATUS=passed
                    COLOR=#02C100
                  else
                    STATUS=failed
                    COLOR=#E40304
                  fi

                  if [ -n "$MATTERMOST_CHANNEL" ]; then
                    CHANNEL_STR="\"channel\": \"$MATTERMOST_CHANNEL\", "
                  fi

                  REPO="${{ github.repository }}"

                  AUTHOR_LOGIN="${{ github.event.sender.login }}"
                  AUTHOR_NAME="$AUTHOR_LOGIN"
                  AUTHOR_FULL_NAME="$AUTHOR_NAME"

                  AUTHOR_REAL_NAME="${{ github.event.sender.name }}"
                  if [ -n "$AUTHOR_REAL_NAME" ]; then
                    AUTHOR_NAME="$AUTHOR_REAL_NAME"
                    AUTHOR_FULL_NAME="$AUTHOR_LOGIN ($AUTHOR_REAL_NAME)"
                  fi

                  AUTHOR_LINK="${{ github.event.sender.html_url }}"

                  PR_NUMBER="${{ github.event.pull_request.number }}"
                  PR_TITLE="${{ github.event.pull_request.title }}"

                  FALLBACK="Build ${{ github.run_number }} for \`$REPO\` by ${{ github.actor }} has $STATUS on branch ${{ github.head_ref }}"

                  TEXT="[Build ${{ github.run_number }}](https://github.com/$REPO/actions/runs/${{ github.run_id }}) for \`$REPO\` by [**${{ github.actor }}**]($AUTHOR_LINK) has **$STATUS** on branch [${{ github.head_ref }}](https://github.com/$REPO/tree/${{ github.head_ref }})"

                  cat <<EOF >mattermost.json
                  {
                   $CHANNEL_STR
                   "username": "GitHub Actions",
                   "icon_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",

                   "attachments": [
                     {
                     "author_name": "$AUTHOR_NAME",
                     "author_link": "$AUTHOR_LINK"
                     "author_icon": "${{ github.event.sender.avatar_url }}",

                     "title": "$REPO#$PR_NUMBER: $PR_TITLE",
                     "title_link": "https://github.com/$REPO/pull/$PR_NUMBER",

                     "fallback": "$FALLBACK",
                     "text": "$TEXT",
                     "color": "$COLOR"
                     }
                     ]
                   }
                  EOF

                  curl -i --fail -X POST -H 'Content-Type: application/json' -o curl_error -d @mattermost.json "$MATTERMOST_WEBHOOK_URL" || cat curl_error
              env:
                  MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
                  MATTERMOST_CHANNEL: builds
            - name: TEMP Display Mattermost message
              if: always()
              run: cat mattermost.json
