name: Build

on:
    pull_request:
        branches: [ v0 ]

jobs:
    build:
        runs-on: ubuntu-latest
        container: node:16

        steps:
            - name: Checkout branch
              uses: actions/checkout@v2
            - name: Cache Node Modules and NPM Cache
              id: cache
              uses: actions/cache@v2
              with:
                  path: |
                      node_modules
                      ~/npm
                  key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-node
            - name: Install deps
              run: npm install
            - name: Run Tests
              run: npm test
            - name: Build docsite
              run: npm run build
              # Docs:
              # 1. https://docs.mattermost.com/developer/webhooks-incoming.html
              # 2. https://docs.mattermost.com/developer/message-attachments.html
            - name: Generate success Mattermost message
              if: ${{ ! cancelled() }}
              run: |
                  if [ ${{ job.status }} = 'success' ]; then
                    STATUS=passed
                    COLOR=#02C100
                  else
                    STATUS=failed
                    COLOR=#E40304
                  fi

                  if [ -n "$MATTERMOST_CHANNEL" ]; then
                    CHANNEL_STR="\"channel\": \"$MATTERMOST_CHANNEL\", "
                  fi

                  FALLBACK="Build ${{ github.run_number }} for \`${{ github.repository }}\` by ${{ github.actor }} has $STATUS on branch ${{ github.head_ref }}"

                  TEXT="[Build ${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for \`${{ github.repository }}\` by **${{ github.actor }}** has **$STATUS** on branch [${{ github.head_ref }}](https://github.com/${{ github.repository }}/tree/${{ github.head_ref }})"

                  cat <<EOF >mattermost.json
                  {
                   $CHANNEL_STR
                   "username": "GitHub Actions",
                   "icon_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",

                   "attachments": [
                     {
                     "author_name": "${{ github.event.sender.login }}",
                     "author_link": "${{ github.event.sender.html_url }}",
                     "author_icon": "${{ github.event.sender.avatar_url }}",

                     "title": "${{ github.repository }}#${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}",
                     "title_link": "https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}",

                     "fallback": "$FALLBACK",
                     "text": "$TEXT",
                     "color": "$COLOR"
                     }
                     ]
                   }
                  EOF

                  curl -i --fail -X POST -H 'Content-Type: application/json' -d @mattermost.json "$MATTERMOST_WEBHOOK_URL"
              env:
                  MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
                  MATTERMOST_CHANNEL: builds

            - name: TEMP Display Mattermost message
              if: always()
              run: cat mattermost.json
            # FIX THIS
            # - name: Notify Mattermost
            #   if: always()
            #   uses: mattermost/action-mattermost-notify@1.0.2
            #   env:
            #       MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
            #       MATTERMOST_CHANNEL: builds
