name: Release

on:
    push:
        branches: [ v0 ]

jobs:
    release:
        runs-on: ubuntu-latest
        container: node:16

        steps:
            - name: Checkout branch
              uses: actions/checkout@v2
            - name: Cache Node Modules and NPM Cache
              id: cache
              uses: actions/cache@v2
              with:
                  path: |
                      node_modules
                      ~/.npm
                  key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-node
            - name: Install deps
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm install
            - name: Build docsite
              run: npm run build -- ../public
            - name: Checkout release branch
              uses: actions/checkout@v2
              with:
                  ref: release/v0
                  persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
                  fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
                  clean: true
            - name: Switch branch and put public
              env:
                  BRANCH: release/v0
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

                  cp -r ../public/api .
                  git add api
                  git commit --allow-empty -m 'release ${{ github.repository }}@${{ github.sha }} by ${{ github.actor }}'

                  # NOTE: Action "ad-m/github-push-action@v0.6.0" just didn't work
                  git push https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git

                  git config --global --remove-section user
            - name: Prepare for publication
              run: |
                  mkdir ../publication/
                  mv ../public ../publication/v0
            - name: Deploy Github Pages
              uses: crazy-max/ghaction-github-pages@v2.5.0
              with:
                  repo: rbkmoney/wallets-api
                  keep_history: true
                  commit_message: 'deploy from ${{ github.actor }}'
                  verbose: true
                  build_dir: ../publication
              env:
                  GH_PAT: ${{ secrets.GH_PAT }} # Necessary to push to ANOTHER repo
            - name: Send Mattermost notification
              if: ${{ ! cancelled() }}
              run: |
                  if [ ${{ job.status }} = 'success' ]; then
                    STATUS='completed successfully'
                    COLOR=#02C100
                  else
                    STATUS=failed
                    COLOR=#E40304
                  fi

                  if [ -n "$MATTERMOST_CHANNEL" ]; then
                    CHANNEL_STR="\"channel\": \"$MATTERMOST_CHANNEL\", "
                  fi

                  COMMIT="${{ github.sha }}"
                  # COMMIT_MSG="${{ github.event.commits[0]['message'] }}"

                  REPO="${{ github.repository }}"
                  RUN_ID="${{ github.run_id }}"
                  RUN_NUM="${{ github.run_number }}"

                  AUTHOR_LOGIN="${{ github.event.sender.login }}"
                  AUTHOR_NAME="$AUTHOR_LOGIN"
                  AUTHOR_FULL_NAME="$AUTHOR_NAME"

                  AUTHOR_REAL_NAME="$(curl -H "Accept: application/vnd.github.v3+json"  -H "Authorization: token ${{ github.token }}" https://api.github.com/users/$AUTHOR_LOGIN | grep '"name":' | cut -d\" -f4)"

                  if [ -n "$AUTHOR_REAL_NAME" ]; then
                    AUTHOR_NAME="$AUTHOR_REAL_NAME"
                    AUTHOR_FULL_NAME="$AUTHOR_REAL_NAME ($AUTHOR_LOGIN)"
                  fi

                  AUTHOR_LINK="${{ github.event.sender.html_url }}"

                  FALLBACK="Deployment of $REPO@$COMMIT by $AUTHOR_NAME has $STATUS"
                  TITLE="Deployment of $REPO (Run #$RUN_NUM) has $STATUS"

                  cat <<EOF >mattermost.json
                  {
                    $CHANNEL_STR
                    "username": "GitHub Actions",
                    "icon_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",

                    "attachments": [
                      {
                        "author_name": "$AUTHOR_FULL_NAME",
                        "author_link": "$AUTHOR_LINK",
                        "author_icon": "${{ github.event.sender.avatar_url }}",

                        "title": "$TITLE",
                        "title_link": "https://github.com/$REPO/actions/runs/$RUN_ID",

                        "fallback": "$FALLBACK",
                        "pretext": "$PRETEXT",
                        "fields": [
                          {
                            "short": true,
                            "title": "Repo",
                            "value": "[\`$REPO\`](https://github.com/$REPO)"
                          },
                          {
                            "short": true,
                            "title": "Commit",
                            "value": "[$COMMIT](https://github.com/$REPO/commit/$COMMIT)"
                          },
                          {
                            "short": true,
                            "title": "Status",
                            "value": "$STATUS"
                          },
                          {
                            "short": true,
                            "title": "Author",
                            "value": "$AUTHOR_NAME"
                          }
                        ],
                        "color": "$COLOR"
                      }
                    ]
                  }
                  EOF

                  CODE="$(curl -i -L -X POST -H 'Content-Type: application/json' -o curl_error -w "%{http_code}" -d @mattermost.json "$MATTERMOST_WEBHOOK_URL")"
                  [ "$CODE" -ge 400 ] && cat curl_error && exit 1
              env:
                  MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
                  MATTERMOST_CHANNEL: deployments
            - name: TEMP Display Mattermost message
              if: always()
              run: cat mattermost.json
