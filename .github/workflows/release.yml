name: Release

on:
    push:
        branches: [ v0 ]

jobs:
    release:
        runs-on: ubuntu-latest
        container: node:16

        steps:
            - name: Checkout branch
              uses: actions/checkout@v2
            - name: Cache Node Modules and NPM Cache
              id: cache
              uses: actions/cache@v2
              with:
                  path: |
                      node_modules
                      ~/npm
                  key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-node
            - name: Install deps
              run: npm install
            - name: Build docsite
              run: npm run build -- ../public
            - name: Checkout release branch
              uses: actions/checkout@v2
              with:
                  ref: release/v0
                  persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
                  fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
                  clean: true
            - name: Switch branch and put public
              env:
                  BRANCH: release/v0
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

                  cp -r ../public/api .
                  git add api
                  git commit --allow-empty -m 'release ${{ github.repository }}@${{ github.sha }} by ${{ github.actor }}'

                  # NOTE: Action "ad-m/github-push-action@v0.6.0" just didn't work
                  git push https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git

                  git config --global --remove-section user
            - name: Prepare for publication
              run: |
                  mkdir ../publication/
                  mv ../public ../publication/v0
            - name: Deploy Github Pages
              uses: crazy-max/ghaction-github-pages@v2.5.0
              with:
                  repo: arikai/wallets-api
                  keep_history: true
                  commit_message: 'deploy from ${{ github.actor }}'
                  # verbose: true # TODO: remove?
                  build_dir: ../publication
              env:
                  GH_PAT: ${{ secrets.GH_PAT }} # Necessary to push to ANOTHER repo
            - name: Generate Mattermost message (Success)
              if: success()
              run: |
                  cat <<EOF >mattermost.json
                  {
                   "text":
                       "
                       | Deployment of $REPO by $COMMIT_AUTHOR completed successfully |
                       | --- |
                       | **Commit ID** |
                       | $COMMIT_ID |
                       | **Commit Author** |
                       | $COMMIT_AUTHOR |
                       | **Commit Message** |
                       | $COMMIT_MESSAGE |
                      "
                   "attachments":
                       [{"color": "green" }]
                   }
                  EOF
              env:
                  REPO: ${{ github.repository }}
                  COMMIT_ID: ${{ github.event.push.commits[0]['id'] }}
                  COMMIT_AUTHOR: ${{ github.event.push.sender }}
                  COMMIT_MESSAGE: ${{ github.event.push.commits[0]['message'] }}
            - name: Generate Mattermost message (Failure)
              if: failure()
              run: |
                  cat <<EOF >mattermost.json
                  {
                   "text":
                       "
                       | Deployment of $REPO by $COMMIT_AUTHOR has failed |
                       | --- |
                       | **Commit ID** |
                       | $COMMIT_ID |
                       | **Commit Author** |
                       | $COMMIT_AUTHOR |
                       | **Commit Message** |
                       | $COMMIT_MESSAGE |
                      "
                   "attachments":
                       [{"color": "red" }]
                   }
                  EOF
              env:
                  REPO: ${{ github.repository }}
                  COMMIT_ID: ${{ github.event.push.commits[0]['id'] }}
                  COMMIT_AUTHOR: ${{ github.event.push.sender }}
                  COMMIT_MESSAGE: ${{ github.event.push.commits[0]['message'] }}
            - name: TEMP Display Mattermost message
              if: always()
              run: cat mattermost.json
            # - name: Notify Mattermost
            #   if: always()
            #   uses: mattermost/action-mattermost-notify@1.0.2
            #   env:
            #       MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
            #       MATTERMOST_CHANNEL: deployments
